{"ast":null,"code":"import _objectSpread from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { cloneDeep, merge } from 'lodash';\nimport types from '../../constants/actionTypes.constants';\nvar INITIAL_STATE = {\n  loading: 0\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.UI_PUT:\n      var newState = cloneDeep(state);\n      return merge(newState, action.payload);\n\n    case types.UI_START_REQUEST:\n      return _objectSpread({}, state, {\n        loading: state.loading + 1\n      });\n\n    case types.UI_STOP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: Math.max(state.loading - 1, 0)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/client/src/app/src/redux/ui/reducer.js"],"names":["cloneDeep","merge","types","INITIAL_STATE","loading","state","action","type","UI_PUT","newState","payload","UI_START_REQUEST","UI_STOP_REQUEST","Math","max"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AAEA,OAAOC,KAAP,MAAkB,uCAAlB;AAEA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAtB;AAEA,gBAAe,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BF,aAA0B;AAAA,MAAXG,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKL,KAAK,CAACM,MAAX;AACC,UAAMC,QAAQ,GAAGT,SAAS,CAACK,KAAD,CAA1B;AACA,aAAOJ,KAAK,CAACQ,QAAD,EAAWH,MAAM,CAACI,OAAlB,CAAZ;;AACD,SAAKR,KAAK,CAACS,gBAAX;AACC,+BAAYN,KAAZ;AAAmBD,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,GAAgB;AAA5C;;AACD,SAAKF,KAAK,CAACU,eAAX;AACC,+BAAYP,KAAZ;AAAmBD,QAAAA,OAAO,EAAES,IAAI,CAACC,GAAL,CAAST,KAAK,CAACD,OAAN,GAAgB,CAAzB,EAA4B,CAA5B;AAA5B;;AACD;AACC,aAAOC,KAAP;AATF;AAWA,CAZD","sourcesContent":["import { cloneDeep, merge } from 'lodash';\n\nimport types from '../../constants/actionTypes.constants';\n\nconst INITIAL_STATE = { loading: 0 };\n\nexport default (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase types.UI_PUT:\n\t\t\tconst newState = cloneDeep(state);\n\t\t\treturn merge(newState, action.payload);\n\t\tcase types.UI_START_REQUEST:\n\t\t\treturn { ...state, loading: state.loading + 1 };\n\t\tcase types.UI_STOP_REQUEST:\n\t\t\treturn { ...state, loading: Math.max(state.loading - 1, 0) };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}