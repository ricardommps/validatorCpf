{"ast":null,"code":"import _classCallCheck from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectWithoutProperties from \"/client/src/app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/client/src/app/src/Client/ClientPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { Form, Field, reduxForm, isValid, isSubmitting, getFormValues } from 'redux-form';\nimport { getClients, createClient, getClientById, clean } from '../redux/clients/actions';\nimport { getItensClients, showClient } from '../redux/clients/selectors';\nimport { obrigatorio, validateEmail, formatCpfCnpj, validateCpfCnpj, formatPhone } from '../common/validation/validation';\nimport TextField from '@material-ui/core/TextField';\nimport { ToastManager } from '../common/UI';\n\nvar renderTextField = function renderTextField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      custom = _objectWithoutProperties(_ref, [\"input\", \"label\", \"meta\"]);\n\n  return React.createElement(TextField, Object.assign({\n    error: Boolean(touched && error),\n    id: \"standard_\".concat(label),\n    label: label,\n    helperText: touched && error,\n    margin: \"normal\"\n  }, input, custom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nvar ClientPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClientPage, _Component);\n\n  function ClientPage(props) {\n    var _this;\n\n    _classCallCheck(this, ClientPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClientPage).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        typePerson: event.target.value\n      });\n    };\n\n    _this.handleSave = function () {\n      console.log(\"<<<Form Submit values>>>\", _this.props.formCriarContaValues);\n      var client = _this.props.formCriarContaValues;\n\n      _this.props.createClient(client).then(function (response) {\n        ToastManager.showSuccessMessage(\"Cliente criado com sucesso!\");\n\n        _this.props.history.push('/client');\n      }).catch(function (err) {\n        console.log(\">>err\", err);\n      });\n    };\n\n    _this.state = {\n      typePerson: 'fisica'\n    };\n    _this.handleSave = _this.handleSave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ClientPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var idClient = this.props.match.params.idClient;\n\n      if (idClient) {\n        this.props.getClientById(idClient).then(function (result) {\n          console.log(\"CLIENTBYID>>\", result);\n\n          _this2.props.initialize(_this2.props.clientById);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          clientById = _this$props.clientById,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          valid = _this$props.valid,\n          submitting = _this$props.submitting;\n      var typePerson = this.state.typePerson;\n      console.log(\">>>PROPS>>>\", this.props);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, typePerson, React.createElement(Form, {\n        onSubmit: handleSubmit(this.handleSave),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Field, {\n        autoComplete: \"firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        component: renderTextField,\n        label: \"First Name\",\n        validate: [obrigatorio],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Field, {\n        autoComplete: \"lastName\",\n        name: \"lastName\",\n        component: renderTextField,\n        type: \"text\",\n        label: \"Last Name\",\n        validate: [obrigatorio],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Field, {\n        autoComplete: \"email\",\n        name: \"email\",\n        component: renderTextField,\n        type: \"email\",\n        label: \"Email\",\n        validate: [obrigatorio, validateEmail],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Field, {\n        autoComplete: \"address\",\n        name: \"address\",\n        component: renderTextField,\n        type: \"text\",\n        label: \"address\",\n        validate: [obrigatorio],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Field, {\n        autoComplete: \"phone\",\n        name: \"phone\",\n        component: renderTextField,\n        type: \"text\",\n        label: \"Phone\",\n        validate: [obrigatorio],\n        normalize: formatPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Field, {\n        autoComplete: \"cpfCnpj\",\n        name: \"cpfCnpj\",\n        component: renderTextField,\n        type: \"text\",\n        label: \"CPF/CNPJ\",\n        validate: [obrigatorio, validateCpfCnpj],\n        normalize: formatCpfCnpj,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !valid || submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Clear Values\"))));\n    }\n  }]);\n\n  return ClientPage;\n}(Component);\n\nvar FORM_ID = 'form_create_client';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    clientById: showClient(state),\n    formCriarContaValues: getFormValues(FORM_ID)(state),\n    valid: isValid(FORM_ID)(state),\n    submitting: isSubmitting(FORM_ID)(state),\n    initialValues: showClient(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getClientById: getClientById,\n    createClient: createClient,\n    clean: clean\n  }, dispatch);\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), reduxForm({\n  form: FORM_ID,\n  touchOnChange: true,\n  touchOnBlur: false,\n  enableReinitialize: true\n}))(ClientPage);","map":{"version":3,"sources":["/client/src/app/src/Client/ClientPage.jsx"],"names":["React","Component","connect","bindActionCreators","compose","Form","Field","reduxForm","isValid","isSubmitting","getFormValues","getClients","createClient","getClientById","clean","getItensClients","showClient","obrigatorio","validateEmail","formatCpfCnpj","validateCpfCnpj","formatPhone","TextField","ToastManager","renderTextField","input","label","meta","touched","error","custom","Boolean","ClientPage","props","handleChange","event","setState","typePerson","target","value","handleSave","console","log","formCriarContaValues","client","then","response","showSuccessMessage","history","push","catch","err","state","bind","idClient","match","params","result","initialize","clientById","handleSubmit","pristine","reset","valid","submitting","FORM_ID","mapStateToProps","initialValues","mapDispatchToProps","dispatch","form","touchOnChange","touchOnBlur","enableReinitialize"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,YAA1C,EAAwDC,aAAxD,QAA6E,YAA7E;AAEA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,aAAnC,EAAkDC,KAAlD,QAA+D,0BAA/D;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,4BAA5C;AAEA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,eAApD,EAAqEC,WAArE,QAAwF,iCAAxF;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MACpBC,KADoB,QACpBA,KADoB;AAAA,MAEpBC,KAFoB,QAEpBA,KAFoB;AAAA,uBAGpBC,IAHoB;AAAA,MAGZC,OAHY,aAGZA,OAHY;AAAA,MAGHC,KAHG,aAGHA,KAHG;AAAA,MAIjBC,MAJiB;;AAAA,SAMpB,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEC,OAAO,CAACH,OAAO,IAAIC,KAAZ,CADlB;AAEI,IAAA,EAAE,qBAAcH,KAAd,CAFN;AAGI,IAAA,KAAK,EAAEA,KAHX;AAII,IAAA,UAAU,EAAEE,OAAO,IAAIC,KAJ3B;AAKI,IAAA,MAAM,EAAC;AALX,KAMQJ,KANR,EAOQK,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANoB;AAAA,CAAxB;;IAiBME,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UASnBC,YATmB,GASJ,UAAAC,KAAK,EAAI;AACpB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACH,KAXkB;;AAAA,UA0BnBC,UA1BmB,GA0BN,YAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,MAAKT,KAAL,CAAWU,oBAAnD;AACA,UAAMC,MAAM,GAAG,MAAKX,KAAL,CAAWU,oBAA1B;;AAEA,YAAKV,KAAL,CAAWrB,YAAX,CAAwBgC,MAAxB,EACCC,IADD,CACM,UAACC,QAAD,EAAc;AAChBvB,QAAAA,YAAY,CAACwB,kBAAb,CAAgC,6BAAhC;;AACA,cAAKd,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACH,OAJD,EAKCC,KALD,CAKO,UAAAC,GAAG,EAAI;AACVV,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,GAArB;AACH,OAPD;AAQH,KAtCkB;;AAEf,UAAKC,KAAL,GAAa;AACTf,MAAAA,UAAU,EAAE;AADH,KAAb;AAGA,UAAKG,UAAL,GAAkB,MAAKA,UAAL,CAAgBa,IAAhB,uDAAlB;AACA,UAAKnB,YAAL,GAAoB,MAAKA,YAAL,CAAkBmB,IAAlB,uDAApB;AANe;AAOlB;;;;wCAMmB;AAAA;;AAAA,UACRC,QADQ,GACK,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MADtB,CACRF,QADQ;;AAEhB,UAAIA,QAAJ,EAAc;AACV,aAAKrB,KAAL,CAAWpB,aAAX,CAAyByC,QAAzB,EACCT,IADD,CACM,UAACY,MAAD,EAAY;AACdhB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2Be,MAA3B;;AACA,UAAA,MAAI,CAACxB,KAAL,CAAWyB,UAAX,CAAsB,MAAI,CAACzB,KAAL,CAAW0B,UAAjC;AACH,SAJD;AAKH;AAGJ;;;6BAgBQ;AAAA,wBACqE,KAAK1B,KAD1E;AAAA,UACG0B,UADH,eACGA,UADH;AAAA,UACeC,YADf,eACeA,YADf;AAAA,UAC6BC,QAD7B,eAC6BA,QAD7B;AAAA,UACuCC,KADvC,eACuCA,KADvC;AAAA,UAC8CC,KAD9C,eAC8CA,KAD9C;AAAA,UACqDC,UADrD,eACqDA,UADrD;AAEL,UAAM3B,UAAU,GAAG,KAAKe,KAAL,CAAWf,UAA9B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAKT,KAA/B;AACA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKI,UADL,EAEI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEuB,YAAY,CAAC,KAAKpB,UAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,YAAY,EAAC,WADjB;AAEI,QAAA,IAAI,EAAC,WAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,SAAS,EAAEhB,eAJf;AAKI,QAAA,KAAK,EAAC,YALV;AAMI,QAAA,QAAQ,EAAE,CAACP,WAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,YAAY,EAAC,UADjB;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,SAAS,EAAEO,eAHf;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAC,WALV;AAMI,QAAA,QAAQ,EAAE,CAACP,WAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,YAAY,EAAC,OADjB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAEO,eAHf;AAII,QAAA,IAAI,EAAC,OAJT;AAKI,QAAA,KAAK,EAAC,OALV;AAMI,QAAA,QAAQ,EAAE,CAACP,WAAD,EAAcC,aAAd,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CArBJ,EA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,YAAY,EAAC,SADjB;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,SAAS,EAAEM,eAHf;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAC,SALV;AAMI,QAAA,QAAQ,EAAE,CAACP,WAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA/BJ,EAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,YAAY,EAAC,OADjB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAEO,eAHf;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAC,OALV;AAMI,QAAA,QAAQ,EAAE,CAACP,WAAD,CANd;AAOI,QAAA,SAAS,EAAEI,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAzCJ,EAoDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,YAAY,EAAC,SADjB;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,SAAS,EAAEG,eAHf;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAC,UALV;AAMI,QAAA,QAAQ,EAAE,CACNP,WADM,EAENG,eAFM,CANd;AAUI,QAAA,SAAS,EAAED,aAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CApDJ,EAkEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAuB,QAAA,QAAQ,EAAE,CAAC4C,KAAD,IAAUC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEH,QAAQ,IAAIG,UAA5C;AAAwD,QAAA,OAAO,EAAEF,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CAlEJ,CAFJ,CADJ;AAmFH;;;;EAjIoB7D,S;;AAoIzB,IAAMgE,OAAO,GAAG,oBAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAd,KAAK;AAAA,SAAK;AAC9BO,IAAAA,UAAU,EAAE3C,UAAU,CAACoC,KAAD,CADQ;AAE9BT,IAAAA,oBAAoB,EAAEjC,aAAa,CAACuD,OAAD,CAAb,CAAuBb,KAAvB,CAFQ;AAG9BW,IAAAA,KAAK,EAAEvD,OAAO,CAACyD,OAAD,CAAP,CAAiBb,KAAjB,CAHuB;AAI9BY,IAAAA,UAAU,EAAEvD,YAAY,CAACwD,OAAD,CAAZ,CAAsBb,KAAtB,CAJkB;AAK9Be,IAAAA,aAAa,EAACnD,UAAU,CAACoC,KAAD;AALM,GAAL;AAAA,CAA7B;;AAQA,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAC/BlE,kBAAkB,CACd;AACIU,IAAAA,aAAa,EAAbA,aADJ;AAEID,IAAAA,YAAY,EAAZA,YAFJ;AAGIE,IAAAA,KAAK,EAALA;AAHJ,GADc,EAMduD,QANc,CADa;AAAA,CAAnC;;AAUA,eAAejE,OAAO,CAClBF,OAAO,CAACgE,eAAD,EAAkBE,kBAAlB,CADW,EAElB7D,SAAS,CAAC;AAAE+D,EAAAA,IAAI,EAAEL,OAAR;AAAiBM,EAAAA,aAAa,EAAE,IAAhC;AAAsCC,EAAAA,WAAW,EAAE,KAAnD;AAA0DC,EAAAA,kBAAkB,EAAE;AAA9E,CAAD,CAFS,CAAP,CAGbzC,UAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { Form, Field, reduxForm, isValid, isSubmitting, getFormValues } from 'redux-form';\n\nimport { getClients, createClient, getClientById, clean } from '../redux/clients/actions';\nimport { getItensClients, showClient } from '../redux/clients/selectors';\n\nimport { obrigatorio, validateEmail, formatCpfCnpj, validateCpfCnpj, formatPhone } from '../common/validation/validation';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport { ToastManager } from '../common/UI';\n\nconst renderTextField = ({\n    input,\n    label,\n    meta: { touched, error },\n    ...custom\n  }) => (\n    <TextField\n        error={Boolean(touched && error)}\n        id={`standard_${label}`}\n        label={label}\n        helperText={touched && error}\n        margin=\"normal\"\n        {...input}\n        {...custom}\n    />\n  )\n\nclass ClientPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            typePerson: 'fisica',\n          }\n        this.handleSave = this.handleSave.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({ typePerson: event.target.value });\n    };\n\n    componentDidMount() {\n        const { idClient } = this.props.match.params;\n        if (idClient) {\n            this.props.getClientById(idClient)\n            .then((result) => {\n                console.log(\"CLIENTBYID>>\",result)\n                this.props.initialize(this.props.clientById)\n            })\n        }\n\n\n    }\n\n    handleSave = () => {\n        console.log(\"<<<Form Submit values>>>\", this.props.formCriarContaValues)\n        const client = this.props.formCriarContaValues;\n\n        this.props.createClient(client)\n        .then((response) => {\n            ToastManager.showSuccessMessage(\"Cliente criado com sucesso!\");\n            this.props.history.push('/client');\n        })\n        .catch(err => {\n            console.log(\">>err\", err)\n        })\n    }\n\n    render() {\n        const { clientById, handleSubmit, pristine, reset, valid, submitting  } = this.props;\n        const typePerson = this.state.typePerson\n        console.log(\">>>PROPS>>>\",this.props)\n        return (\n            <React.Fragment>\n                {typePerson}\n                <Form onSubmit={handleSubmit(this.handleSave)}>\n                    <div>\n                        <Field\n                            autoComplete=\"firstName\"\n                            name=\"firstName\"\n                            type=\"text\"\n                            component={renderTextField}\n                            label=\"First Name\"\n                            validate={[obrigatorio]}\n                        />\n                    </div>\n                    <div>\n                        <Field\n                            autoComplete=\"lastName\"\n                            name=\"lastName\"\n                            component={renderTextField}\n                            type=\"text\"\n                            label=\"Last Name\"\n                            validate={[obrigatorio]}\n                        />\n                    </div>\n                    <div>\n                        <Field\n                            autoComplete=\"email\"\n                            name=\"email\"\n                            component={renderTextField}\n                            type=\"email\"\n                            label=\"Email\"\n                            validate={[obrigatorio, validateEmail]}\n                        />\n                    </div>\n                    <div>\n                        <Field\n                            autoComplete=\"address\"\n                            name=\"address\"\n                            component={renderTextField}\n                            type=\"text\"\n                            label=\"address\"\n                            validate={[obrigatorio]}\n                        />\n                    </div>\n                    <div>\n                        <Field\n                            autoComplete=\"phone\"\n                            name=\"phone\"\n                            component={renderTextField}\n                            type=\"text\"\n                            label=\"Phone\"\n                            validate={[obrigatorio]}\n                            normalize={formatPhone}\n                        />\n                    </div>\n                    <div>\n                        <Field\n                            autoComplete=\"cpfCnpj\"\n                            name=\"cpfCnpj\"\n                            component={renderTextField}\n                            type=\"text\"\n                            label=\"CPF/CNPJ\"\n                            validate={[\n                                obrigatorio, \n                                validateCpfCnpj\n                            ]}\n                            normalize={formatCpfCnpj}\n                        />\n                    </div>\n                    <div>\n                        <button type=\"submit\"  disabled={!valid || submitting}>\n                        Submit\n                        </button>\n                        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n                        Clear Values\n                        </button>\n                    </div>\n                    \n                </Form>\n\n            </React.Fragment>\n\n        )\n    }\n}\n\nconst FORM_ID = 'form_create_client';\n\nconst mapStateToProps = state => ({\n    clientById: showClient(state),\n    formCriarContaValues: getFormValues(FORM_ID)(state),\n    valid: isValid(FORM_ID)(state),\n    submitting: isSubmitting(FORM_ID)(state),\n    initialValues:showClient(state),\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            getClientById,\n            createClient,\n            clean\n        },\n        dispatch\n    );\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps), \n    reduxForm({ form: FORM_ID, touchOnChange: true, touchOnBlur: false, enableReinitialize: true })\n)(ClientPage);\n\n\n"]},"metadata":{},"sourceType":"module"}