{"ast":null,"code":"import clientService from '../../api/clients';\nimport types from '../../constants/actionTypes.constants';\nexport var getClients = function getClients() {\n  var service = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : clientService;\n  return function (dispatch) {\n    return service.clients().then(function (data) {\n      return dispatch({\n        type: types.LOAD_CLIENTS,\n        payload: data\n      });\n    });\n  };\n};\nexport var getClientById = function getClientById(idClient) {\n  var service = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : clientService;\n  return function (dispatch) {\n    return service.clientInfo(idClient).then(function (data) {\n      return dispatch({\n        type: types.LOAD_CLIENT_BY_ID,\n        payload: data\n      });\n    });\n  };\n};\nexport var createClient = function createClient(params) {\n  var service = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : clientService;\n  return function (dispatch) {\n    return service.createClient(params).then(function (data) {\n      return dispatch({\n        type: types.CREATE_CLIENT,\n        payload: data\n      });\n    });\n  };\n};\nexport var updateClient = function updateClient(params, idClient) {\n  var service = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : clientService;\n  return function (dispatch) {\n    return service.updateClient(params, idClient).then(function (data) {\n      return dispatch({\n        type: types.UPDATE_CLIENT,\n        payload: data\n      });\n    });\n  };\n};\nexport var deleteClient = function deleteClient(idClient) {\n  var service = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : clientService;\n  return function (dispatch) {\n    return service.updateClient(idClient).then(function (data) {\n      return dispatch({\n        type: types.UPDATE_CLIENT,\n        payload: data\n      });\n    });\n  };\n};\nexport function clean() {\n  return {\n    type: types.CLEAN\n  };\n}\n;","map":{"version":3,"sources":["/client/src/app/src/redux/clients/actions.js"],"names":["clientService","types","getClients","service","dispatch","clients","then","data","type","LOAD_CLIENTS","payload","getClientById","idClient","clientInfo","LOAD_CLIENT_BY_ID","createClient","params","CREATE_CLIENT","updateClient","UPDATE_CLIENT","deleteClient","clean","CLEAN"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MACtBC,OADsB,uEACZH,aADY;AAAA,SAErB,UAAAI,QAAQ;AAAA,WACLD,OAAO,CACFE,OADL,GAEKC,IAFL,CAEU,UAAAC,IAAI;AAAA,aACNH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,KAAK,CAACQ,YADP;AAELC,QAAAA,OAAO,EAAEH;AAFJ,OAAD,CADF;AAAA,KAFd,CADK;AAAA,GAFa;AAAA,CAAnB;AAYP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CACzBC,QADyB;AAAA,MAEzBT,OAFyB,uEAEfH,aAFe;AAAA,SAGxB,UAAAI,QAAQ;AAAA,WACLD,OAAO,CACFU,UADL,CACgBD,QADhB,EAEKN,IAFL,CAEU,UAAAC,IAAI;AAAA,aACNH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,KAAK,CAACa,iBADP;AAELJ,QAAAA,OAAO,EAAEH;AAFJ,OAAD,CADF;AAAA,KAFd,CADK;AAAA,GAHgB;AAAA,CAAtB;AAaP,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CACxBC,MADwB;AAAA,MAExBb,OAFwB,uEAEdH,aAFc;AAAA,SAGvB,UAAAI,QAAQ,EAAI;AACb,WAAOD,OAAO,CAACY,YAAR,CAAqBC,MAArB,EACFV,IADE,CACG,UAAAC,IAAI;AAAA,aACNH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,KAAK,CAACgB,aADP;AAELP,QAAAA,OAAO,EAAEH;AAFJ,OAAD,CADF;AAAA,KADP,CAAP;AAOH,GAX2B;AAAA,CAArB;AAaP,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CACxBF,MADwB,EAExBJ,QAFwB;AAAA,MAGxBT,OAHwB,uEAGdH,aAHc;AAAA,SAIvB,UAAAI,QAAQ,EAAI;AACb,WAAOD,OAAO,CAACe,YAAR,CAAqBF,MAArB,EAA6BJ,QAA7B,EACFN,IADE,CACG,UAAAC,IAAI;AAAA,aACNH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,KAAK,CAACkB,aADP;AAELT,QAAAA,OAAO,EAAEH;AAFJ,OAAD,CADF;AAAA,KADP,CAAP;AAOH,GAZ2B;AAAA,CAArB;AAcP,OAAO,IAAMa,YAAY,GAAG,SAAfA,YAAe,CACxBR,QADwB;AAAA,MAExBT,OAFwB,uEAEdH,aAFc;AAAA,SAGvB,UAAAI,QAAQ,EAAI;AACb,WAAOD,OAAO,CAACe,YAAR,CAAqBN,QAArB,EACFN,IADE,CACG,UAACC,IAAD;AAAA,aACFH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,KAAK,CAACkB,aADP;AAELT,QAAAA,OAAO,EAAEH;AAFJ,OAAD,CADN;AAAA,KADH,CAAP;AAOH,GAX2B;AAAA,CAArB;AAaP,OAAO,SAASc,KAAT,GAAiB;AAAE,SAAO;AAAEb,IAAAA,IAAI,EAAEP,KAAK,CAACqB;AAAd,GAAP;AAA6B;AAAA","sourcesContent":["import clientService from '../../api/clients'\nimport types from '../../constants/actionTypes.constants';\n\nexport const getClients = (\n    service = clientService\n) => dispatch =>\n        service\n            .clients()\n            .then(data =>\n                dispatch({\n                    type: types.LOAD_CLIENTS,\n                    payload: data\n                })\n            );\n\nexport const getClientById = (\n    idClient,\n    service = clientService\n) => dispatch =>\n        service\n            .clientInfo(idClient)\n            .then(data =>\n                dispatch({\n                    type: types.LOAD_CLIENT_BY_ID,\n                    payload: data\n                })\n            );\n\nexport const createClient = (\n    params,\n    service = clientService\n) => dispatch => {\n    return service.createClient(params)\n        .then(data =>\n            dispatch({\n                type: types.CREATE_CLIENT,\n                payload: data\n            })\n\t    )\n};\n\nexport const updateClient = (\n    params,\n    idClient,\n    service = clientService\n) => dispatch => {\n    return service.updateClient(params, idClient )\n        .then(data =>\n            dispatch({\n                type: types.UPDATE_CLIENT,\n                payload: data\n            })\n\t    );\n};\n\nexport const deleteClient = (\n    idClient,\n    service = clientService\n) => dispatch => {\n    return service.updateClient(idClient )\n        .then((data) =>\n            dispatch({\n                type: types.UPDATE_CLIENT,\n                payload: data\n            })\n\t    );\n};\n\nexport function clean() { return { type: types.CLEAN} };\n\n\n"]},"metadata":{},"sourceType":"module"}