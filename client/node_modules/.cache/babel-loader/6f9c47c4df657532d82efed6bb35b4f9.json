{"ast":null,"code":"import _ from 'lodash';\nimport imask from 'imask';\nimport contentCpf from \"cpf_cnpj\";\nimport contentCnpjfrom from \"cpf_cnpj\";\nimport isEmail from 'validator/lib/isEmail';\nimport isEmpty from 'validator/lib/isEmpty'; // COMMONS\n\nexport var obrigatorio = function obrigatorio(value, all, props) {\n  if (value === undefined) {\n    return 'Required';\n  }\n\n  if (typeof value === 'object' && _.isEmpty(value)) {\n    return 'Required';\n  }\n\n  if (typeof value !== 'object' && isEmpty(value)) {\n    return 'Required';\n  }\n\n  return undefined;\n}; // CPF\n\nvar CPF_MASK = imask.createMask({\n  mask: '000.000.000-00'\n});\nexport var formatCpf = function formatCpf(value, all, props) {\n  if (value === '000.000.000-00') {\n    return value;\n  }\n\n  return CPF_MASK.resolve(value);\n};\nexport var validateCpf = function validateCpf(value, all, props) {\n  if (value === '000.000.000-00') {\n    return undefined;\n  }\n\n  if (contentCpf.CPF.isValid(value)) {\n    return undefined;\n  }\n\n  return 'CPF invalid';\n}; //PHONE\n\nvar PHONE_MASK = imask.createMask({\n  mask: '(00) 00000-0000'\n});\nexport var formatPhone = function formatPhone(value, all, props) {\n  if (value === '(00) 00000-0000') {\n    return value;\n  }\n\n  return PHONE_MASK.resolve(value);\n}; // CNJP\n\nvar CNJP_MASK = imask.createMask({\n  mask: '00.000.000/0000-00'\n});\nexport var formatCnpj = function formatCnpj(value, all, props) {\n  if (value === '00.000.000/0000-00') {\n    return value;\n  }\n\n  return CNJP_MASK.resolve(value);\n};\nexport var validateCnpj = function validateCnpj(value, all, props) {\n  if (value === '00.000.000/0000-00') {\n    return undefined;\n  }\n\n  if (contentCnpjfrom.CNPJ.isValid(value)) {\n    return undefined;\n  }\n\n  return 'CNPJ invalid';\n};\nexport var formatCpfCnpj = function formatCpfCnpj(value, all, props) {\n  console.log(\">>formatCpfCnpj\", value.length);\n\n  if (value.length < 15) {\n    console.log(\">>>FORMATA CPF\"); //CPF \n\n    if (value === '000.000.000-00') {\n      return value;\n    }\n\n    return CPF_MASK.resolve(value);\n  } else {\n    console.log(\">>>FORMATA CNPJ\"); //CNPJ\n\n    if (value === '00.000.000/0000-00') {\n      return value;\n    }\n\n    return CNJP_MASK.resolve(value);\n  }\n};\nexport var validateCpfCnpj = function validateCpfCnpj(value, all, props) {\n  console.log(\">>validateCpfCnpj\", value.length);\n\n  if (value.length < 15) {\n    console.log(\">>>VALIDA CPF\"); //CPF \n\n    if (value === '000.000.000-00') {\n      return undefined;\n    }\n\n    if (contentCpf.CPF.isValid(value)) {\n      return undefined;\n    }\n\n    return 'CPF invalid';\n  } else {\n    console.log(\">>>VALIDA CNPJ\"); //CNPJ\n\n    if (value === '00.000.000/0000-00') {\n      return undefined;\n    }\n\n    if (contentCnpjfrom.CNPJ.isValid(value)) {\n      return undefined;\n    }\n\n    return 'CNPJ invalid';\n  }\n}; // EMAIL\n\nexport var validateEmail = function validateEmail(value, all, props) {\n  if (isEmail(value)) {\n    return undefined;\n  }\n\n  return 'Email invalid';\n};","map":{"version":3,"sources":["/client/src/app/src/common/validation/validation.js"],"names":["_","imask","contentCpf","contentCnpjfrom","isEmail","isEmpty","obrigatorio","value","all","props","undefined","CPF_MASK","createMask","mask","formatCpf","resolve","validateCpf","CPF","isValid","PHONE_MASK","formatPhone","CNJP_MASK","formatCnpj","validateCnpj","CNPJ","formatCpfCnpj","console","log","length","validateCpfCnpj","validateEmail"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport imask from 'imask';\nimport contentCpf from \"cpf_cnpj\";\nimport contentCnpjfrom from \"cpf_cnpj\";\nimport isEmail from 'validator/lib/isEmail';\nimport isEmpty from 'validator/lib/isEmpty';\n\n// COMMONS\nexport const obrigatorio = (value, all, props) => {\n  if (value === undefined) {\n    return 'Required';\n  }\n\n  if (typeof value === 'object' && _.isEmpty(value)) {\n    return 'Required';\n  }\n\n\n  if (typeof value !== 'object' && isEmpty(value)) {\n    return 'Required';\n  }\n\n  return undefined;\n};\n\n\n// CPF\nconst CPF_MASK = imask.createMask({ mask: '000.000.000-00' });\n\nexport const formatCpf = (value, all, props) => {\n  if (value === '000.000.000-00') {\n    return value;\n  }\n  return CPF_MASK.resolve(value);\n};\n\nexport const validateCpf = (value, all, props) => {\n  if (value === '000.000.000-00') {\n    return undefined;\n  }\n\n  if (contentCpf.CPF.isValid(value)) {\n    return undefined;\n  }\n\n  return 'CPF invalid';\n};\n\n\n//PHONE\nconst PHONE_MASK = imask.createMask({ mask: '(00) 00000-0000' });\nexport const formatPhone = (value, all, props) => {\n  if (value === '(00) 00000-0000') {\n    return value;\n  }\n\n  return PHONE_MASK.resolve(value);\n};\n\n\n// CNJP\nconst CNJP_MASK = imask.createMask({ mask: '00.000.000/0000-00' });\n\nexport const formatCnpj = (value, all, props) => {\n  if (value === '00.000.000/0000-00') {\n    return value;\n  }\n\n  return CNJP_MASK.resolve(value);\n};\n\nexport const validateCnpj = (value, all, props) => {\n\n  if (value === '00.000.000/0000-00') {\n    return undefined;\n  }\n\n  if (contentCnpjfrom.CNPJ.isValid(value)) {\n    return undefined;\n  }\n\n  return 'CNPJ invalid';\n};\n\nexport const formatCpfCnpj = (value, all, props) => {\n  console.log(\">>formatCpfCnpj\",value.length)\n  if (value.length < 15) {\n    console.log(\">>>FORMATA CPF\")\n    //CPF \n    if (value === '000.000.000-00') {\n      return value;\n    }\n    return CPF_MASK.resolve(value);\n  } else {\n    console.log(\">>>FORMATA CNPJ\")\n    //CNPJ\n    if (value === '00.000.000/0000-00') {\n      return value;\n    }\n\n    return CNJP_MASK.resolve(value);\n  }\n};\n\n\nexport const validateCpfCnpj = (value, all, props) => {\n  console.log(\">>validateCpfCnpj\",value.length)\n  if (value.length < 15) {\n    console.log(\">>>VALIDA CPF\")\n    //CPF \n    if (value === '000.000.000-00') {\n      return undefined;\n    }\n  \n    if (contentCpf.CPF.isValid(value)) {\n      return undefined;\n    }\n  \n    return 'CPF invalid';\n  } else {\n    console.log(\">>>VALIDA CNPJ\")\n    //CNPJ\n    if (value === '00.000.000/0000-00') {\n      return undefined;\n    }\n  \n    if (contentCnpjfrom.CNPJ.isValid(value)) {\n      return undefined;\n    }\n  \n    return 'CNPJ invalid';\n  }\n\n}\n\n// EMAIL\nexport const validateEmail = (value, all, props) => {\n  if (isEmail(value)) {\n    return undefined;\n  }\n\n  return 'Email invalid';\n};\n"]},"metadata":{},"sourceType":"module"}