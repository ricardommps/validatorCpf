{"ast":null,"code":";\n\n(function (commonjs) {\n  // Blacklist common values.\n  var BLACKLIST = [\"00000000000\", \"11111111111\", \"22222222222\", \"33333333333\", \"44444444444\", \"55555555555\", \"66666666666\", \"77777777777\", \"88888888888\", \"99999999999\", \"12345678909\"];\n  var STRICT_STRIP_REGEX = /[.-]/g;\n  var LOOSE_STRIP_REGEX = /[^\\d]/g;\n\n  var verifierDigit = function verifierDigit(numbers) {\n    numbers = numbers.split(\"\").map(function (number) {\n      return parseInt(number, 10);\n    });\n    var modulus = numbers.length + 1;\n    var multiplied = numbers.map(function (number, index) {\n      return number * (modulus - index);\n    });\n    var mod = multiplied.reduce(function (buffer, number) {\n      return buffer + number;\n    }) % 11;\n    return mod < 2 ? 0 : 11 - mod;\n  };\n\n  var CPF = {};\n\n  CPF.format = function (number) {\n    return this.strip(number).replace(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/, \"$1.$2.$3-$4\");\n  };\n\n  CPF.strip = function (number, strict) {\n    var regex = strict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\n    return (number || \"\").toString().replace(regex, \"\");\n  };\n\n  CPF.isValid = function (number, strict) {\n    var stripped = this.strip(number, strict); // CPF must be defined\n\n    if (!stripped) {\n      return false;\n    } // CPF must have 11 chars\n\n\n    if (stripped.length !== 11) {\n      return false;\n    } // CPF can't be blacklisted\n\n\n    if (BLACKLIST.indexOf(stripped) >= 0) {\n      return false;\n    }\n\n    var numbers = stripped.substr(0, 9);\n    numbers += verifierDigit(numbers);\n    numbers += verifierDigit(numbers);\n    return numbers.substr(-2) === stripped.substr(-2);\n  };\n\n  CPF.generate = function (formatted) {\n    var numbers = \"\";\n\n    for (var i = 0; i < 9; i++) {\n      numbers += Math.floor(Math.random() * 9);\n    }\n\n    numbers += verifierDigit(numbers);\n    numbers += verifierDigit(numbers);\n    return formatted ? this.format(numbers) : numbers;\n  };\n\n  if (commonjs) {\n    module.exports = CPF;\n  } else {\n    window.CPF = CPF;\n  }\n})(typeof exports !== \"undefined\");","map":null,"metadata":{},"sourceType":"script"}