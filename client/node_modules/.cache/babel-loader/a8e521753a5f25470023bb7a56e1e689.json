{"ast":null,"code":"var _jsxFileName = \"/client/src/app/src/index.js\";\n// Babel polyfill\nimport '@babel/polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch, Router } from 'react-router-dom';\nimport store from './store';\nimport history from './history';\nimport * as serviceWorker from './serviceWorker';\nimport routes from './routes'; // Render do App\n\nconsole.log(\">>PUBLIC_URL\", process.env.PUBLIC_URL);\nvar basename = process.env.PUBLIC_URL ? process.env.PUBLIC_URL : '/';\nvar Root = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, routes.map(function (route) {\n  return React.createElement(Route, {\n    key: route.path,\n    path: route.path,\n    component: route.component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n}))))));\nReactDOM.render(Root, document.getElementById('root')); // Config service worker\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/client/src/app/src/index.js"],"names":["React","ReactDOM","Provider","BrowserRouter","Route","Switch","Router","store","history","serviceWorker","routes","console","log","process","env","PUBLIC_URL","basename","Root","map","route","path","component","render","document","getElementById","unregister"],"mappings":";AAAA;AACA,OAAO,iBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAqD,kBAArD;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BC,OAAO,CAACC,GAAR,CAAYC,UAAvC;AACA,IAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBF,OAAO,CAACC,GAAR,CAAYC,UAArC,GAAkD,GAAnE;AAEA,IAAME,IAAI,GACT,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEE,MAAM,CAACQ,GAAP,CAAW,UAAAC,KAAK;AAAA,SAChB,oBAAC,KAAD;AACC,IAAA,GAAG,EAAEA,KAAK,CAACC,IADZ;AAEC,IAAA,IAAI,EAAED,KAAK,CAACC,IAFb;AAGC,IAAA,SAAS,EAAED,KAAK,CAACE,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB;AAAA,CAAhB,CADF,CADD,CADD,CADD,CADD,CADD;AAmBApB,QAAQ,CAACqB,MAAT,CAAgBL,IAAhB,EAAsBM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAtB,E,CAEA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["// Babel polyfill\nimport '@babel/polyfill';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch, Router } from 'react-router-dom'\n\nimport store from './store';\nimport history from './history'\nimport * as serviceWorker from './serviceWorker';\nimport routes from './routes';\n\n// Render do App\nconsole.log(\">>PUBLIC_URL\",process.env.PUBLIC_URL)\nconst basename = process.env.PUBLIC_URL ? process.env.PUBLIC_URL : '/';\n\nconst Root = (\n\t<Provider store={store}>\n\t\t<div>\n\t\t\t<Router history={history}>\n\t\t\t\t<div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{routes.map(route => (\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tkey={route.path}\n\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</div>\n\t</Provider>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// Config service worker\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}